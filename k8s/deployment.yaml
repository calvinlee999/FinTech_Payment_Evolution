# Kubernetes Deployment for Next.js SSR Application
# Supports both AWS EKS and Azure AKS

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nextjs-app
  namespace: default
  labels:
    app: nextjs-app
    tier: frontend
    framework: nextjs
spec:
  replicas: 3
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: nextjs-app
  template:
    metadata:
      labels:
        app: nextjs-app
        tier: frontend
    spec:
      serviceAccountName: nextjs-service-account
      automountServiceAccountToken: false
      containers:
      - name: nextjs-app
        image: ${ECR_REPOSITORY_URI}:${IMAGE_TAG}
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: CLOUD_PROVIDER
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: cloud-provider
        - name: CDN_DOMAIN
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: cdn-domain
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
            ephemeral-storage: "1Gi"
          limits:
            memory: "512Mi"
            cpu: "500m"
            ephemeral-storage: "2Gi"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        fsGroup: 1001
      imagePullSecrets:
      - name: ecr-registry-secret

---
apiVersion: v1
kind: Service
metadata:
  name: nextjs-service
  namespace: default
  labels:
    app: nextjs-app
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: nextjs-app

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: default
data:
  cloud-provider: "aws"  # or "azure"
  cdn-domain: ""  # Will be set during deployment
  node-env: "production"

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: nextjs-hpa
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nextjs-app
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
# Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: nextjs-pdb
  namespace: default
spec:
  minAvailable: 50%
  selector:
    matchLabels:
      app: nextjs-app

---
# Network Policy (optional, for security)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: nextjs-network-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: nextjs-app
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 3000
  egress:
  - {} # Allow all egress traffic
